package kr.ac.kopo.board.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.SessionAttributes;

import kr.ac.kopo.board.service.MemberService;
import kr.ac.kopo.board.vo.LoginVO;
import kr.ac.kopo.board.vo.MemberVO;

// annotation으로 session 관리
@SessionAttributes("currentMember")
@Controller
public class MemberController {
	@Autowired
	private MemberService memberService;
	
	@GetMapping("/login")
	public String loginForm(Model model) {
		model.addAttribute("loginVO", new LoginVO());
		System.out.println("로그인페이지 이동");
		return "member/loginForm";
	}
	
	@PostMapping("/login")
	public String loginProcess(@Valid LoginVO loginVO, Errors errors, Model model, HttpServletRequest request, HttpSession session) {
		if (errors.hasErrors()) {
			System.out.println("로그인 실패");
			return "member/loginForm";
		} else {
			MemberVO memberVO = memberService.loginMember(loginVO);
			if (memberVO == null) {
				System.out.println("id와 비밀번호가 틀렸슴");
				model.addAttribute("msg", "id 또는 password를 확인해주세요");
				return "member/loginForm";
			} else {
				System.out.println("로그인 성공");
				System.out.println(memberVO);
				// session 등록
//				session.setAttribute("currentMember", memberVO);
				
				return "redirect:/";
				
			}
			
		}
	}
	
	@GetMapping("/signup")
	public String signUpForm(Model model) {
		model.addAttribute("memberVO", new MemberVO());
		System.out.println("회원가입 이동");
		return "member/signupForm";
	}
	
	@PostMapping("/signup")
	public String signUpProcess(@Valid MemberVO memberVO, Errors errors, Model model) {
		if (errors.hasErrors()) {
			System.out.println("로그인 실패");
			return "member/signupForm";
		} else {
			memberService.signUp(memberVO);
			if (memberVO == null) {
				System.out.println("id와 비밀번호가 틀렸슴");
				model.addAttribute("msg", "id 또는 password를 확인해주세요");
				return "member/signupForm";
			} else {
				System.out.println("로그인 성공");
				System.out.println(memberVO);
				return "redirect:/board";
				
			}
			
		}
	}
	
//	@GetMapping("logout")
	public String logout(HttpSession session) {
//		session.removeAttribute("currentMember");
		session.invalidate();
		return "redirect:/";
	}
	@GetMapping("logout")
	public String logout2(HttpSession session) {
		
		session.invalidate();
		return "redirect:/";
	}
}
