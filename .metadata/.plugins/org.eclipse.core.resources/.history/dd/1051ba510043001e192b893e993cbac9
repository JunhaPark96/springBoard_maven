package kr.ac.kopo.board.interceptor;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Component;
import org.springframework.web.servlet.HandlerInterceptor;
import org.springframework.web.servlet.ModelAndView;

import kr.ac.kopo.board.vo.MemberVO;

@Component
public class TestInterceptor implements HandlerInterceptor{

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		System.out.println("testInterceptor preHandle()");
		HttpSession session = request.getSession();
		MemberVO memberVO = (MemberVO) session.getAttribute("currentMember");
		if (memberVO != null) { // 로그인이 된 경우 -> 바로 핸들러로 넘김
			response.sendRedirect(request.getContextPath()+"/login");
			return false;
		} else { 
			// 로그인이 안되어 있는 경우 return false 
			// redirect를 해서 login.jsp로 이동
			return true;
		}
		// login 페이지로 리다이렉션을 계속하기 때문에 로그인 페이지는 exclude를 해서 메소드가 재귀하지 않도록 해야함. 로그인 컨트롤러는 인터셉터에 뺏기지 않음
	}

	@Override
	public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler,
			ModelAndView modelAndView) throws Exception {
		HandlerInterceptor.super.postHandle(request, response, handler, modelAndView);
	}

	@Override
	public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)
			throws Exception {
		HandlerInterceptor.super.afterCompletion(request, response, handler, ex);
	}
	
}
